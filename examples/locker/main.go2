package main

import (
	"fmt"
	"sync"

	"github.com/dgrr/gtl"
)

func main() {
	var wg sync.WaitGroup

	vec := gtl.NewLocker(
		gtl.NewVec[int](), &sync.Mutex{})

	for i := 0; i < 20; i++ {
		wg.Add(1)
		go func(i int) {
			vec.Lock()
			vec.V().Append(i)
			vec.Unlock()
			wg.Done()
		}(i)
	}

	wg.Wait()

	fmt.Println("last value", vec.V())
}
